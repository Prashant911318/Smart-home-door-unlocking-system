#include <Keypad.h>
#include<Servo.h>
Servo myservo;
String voice;
#include<LiquidCrystal.h>
LiquidCrystal lcd(7, 6, 2, 3, 4, 5);
int pos = 0;
#include <IRremote.h>
int RECV_PIN = 8;
IRrecv irrecv(RECV_PIN);
decode_results results;
#define Password_length 2
char Data[Password_length];
char Master[Password_length] = "A";
byte data_count = 0;
char customKey;
const byte Rows = 4;
const byte Cols = 4;
char Keys[Rows][Cols] =
{
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'},
};
bool door = true;
byte rowPins[Rows] = {53, 51, 49, 47};
byte colPins[Cols] = {45, 43, 41, 39};
Keypad customKeypad = Keypad(makeKeymap(Keys), rowPins, colPins, Rows, Cols);

void setup()
{
  pinMode(8,INPUT);
  irrecv.enableIRIn();
  myservo.attach(12);
  ServoClose();
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  lcd.print("Electrocus");
  lcd.setCursor(8, 1);
  lcd.print("Solution");
  Serial.println("Electrocus Solution");
  delay(5000);
  lcd.clear();
}
void loop()
{
  if (door == 0)
  {
    customKey = customKeypad.getKey();
    if (customKey == 'B')
    {
      ServoClose();
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Locked");
      Serial.println("Locked");
      delay(3000);
      door = 1;
    }
  }
  else Open();
  while (Serial.available())
  {
    delay(10);
    char c = Serial.read();
    if (c == '#') 
    {
      break;
    }
    voice += c;
  }
  if (voice.length() > 0)
  {
    Serial.println(voice);
    if(voice=="AB")
    {
      ServoOpen();
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Door open");
      door=0;
    }
   
   else if(voice == "CD")
    {
      ServoClose();
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Door Close");
      door=1;
    }
    voice="";
  }
  if (irrecv.decode(&results))
  { 
    int value = results.value;
    Serial.println(value);
    switch (value)
    {
      case -32641:
        ServoOpen();
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Door open");
        door=0;
        break;
      case 16575:
        ServoClose();
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Door Close");
        //door=1;
        break;
    }
    irrecv.resume();
  }
}

void Open()
{
  lcd.setCursor(0, 0);
  lcd.print("ENTER PASSWORD");
  Serial.println("ENTER PASSWORD");
  delay(1000);
  customKey = customKeypad.getKey();
  if (customKey)
  {
    Data[data_count] = customKey;
    Serial.println(Data[data_count]);
    data_count++;
  }
  if (data_count == Password_length - 1)
  {
    if (!strcmp(Data, Master))
    {
      ServoOpen();
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("You May Enter");
      Serial.println("You May Enter");
      door = 0;
    }
    else
    {
      lcd.clear();
      lcd.print("Wrong Password");
      Serial.println("Wrong Password");
      delay(4000);
      door = 1;
    }
    clearData();
  }
}
void clearData()
{
  while (data_count != 0)
  {
    Data[data_count--] = 0;
  }
  return;
}
void ServoOpen()
{
  for (pos = 180; pos >= 0; pos -= 5)
  { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
}

void ServoClose()
{
  for (pos = 0; pos <= 180; pos += 5)
  { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
}
